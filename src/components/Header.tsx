import Head from 'next/head';
import { ChangeEvent, useCallback } from 'react';
import { css } from '@emotion/react';
import styled from '@emotion/styled';

import { useCardView } from '@src/hooks/useCardView';
import { GridViewIcon, ListViewIcon } from './icons';
import { IconButton } from './IconButton';
import { Select } from './Select';

const StyledHeader = styled.header(
  ({ theme }) => css`
    padding: 2rem;
    min-height: 7rem;

    ${theme.media?.gteSmall} {
      padding: 2rem 0;
      display: flex;
      align-items: center;
    }
  `
);

const H1 = styled.h1`
  flex: 1;
  font-size: 2.4rem;
  font-weight: bold;
`;

const ActionDiv = styled.div`
  display: flex;
  align-items: center;

  ${({ theme }) => theme.media?.lteSmall} {
    margin-top: 2rem;
  }
`;

const SelectWrapperDiv = styled.div`
  flex: 1;
  margin-right: 2rem;
  min-width: 16rem;
`;

const StyledIconButton = styled(IconButton)`
  margin-right: 1rem;
`;

export const Header = () => {
  const { mode, statusFilter, setMode, setStatusFilter } = useCardView();

  const handleChangeMode = useCallback(
    (mode: 'list' | 'grid') => () => {
      setMode(mode);
    },
    [setMode]
  );

  const handleChangeStatusFilter = useCallback(
    (e: ChangeEvent<HTMLSelectElement>) => {
      setStatusFilter(e.target.value);
    },
    [setStatusFilter]
  );

  return (
    <>
      <Head>
        <title>My Joggs</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <StyledHeader>
        <H1>My Joggs</H1>
        <ActionDiv>
          <SelectWrapperDiv>
            <Select value={statusFilter} onChange={handleChangeStatusFilter} fullWidth>
              <option value="">All</option>
              <option value="ongoing">Ongoing</option>
              <option value="scheduled">Scheduled</option>
              <option value="ended">Ended</option>
            </Select>
          </SelectWrapperDiv>
          <StyledIconButton onClick={handleChangeMode('grid')} icon={<GridViewIcon />} active={mode === 'grid'} />
          <IconButton onClick={handleChangeMode('list')} icon={<ListViewIcon />} active={mode === 'list'} />
        </ActionDiv>
      </StyledHeader>
    </>
  );
};
